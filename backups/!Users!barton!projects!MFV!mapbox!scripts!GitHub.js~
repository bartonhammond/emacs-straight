'use strict';

require('es6-promise').polyfill();
require('isomorphic-fetch');
require('regenerator/runtime');

export default class GitHub {
  constructor(token){
    this.token = 'token ' + token;
    this.GITHUB_API_BASE = 'https://api.github.com';
  }
  async getProfile(name) {
    return await this._fetch({
      method: 'GET',
      url: '/users/' + name
    });
  }
  /**
   * ### _fetch
   * A generic function that prepares the request to Parse.com
   */  
  async _fetch(opts) {
    opts = _.extend({
      method: 'GET',
      url: null,
      body: null,
      callback: null
    }, opts);

    var reqOpts = {
      method: opts.method,
      headers: {
        'Authorization': this.token
      }
    };

    if (opts.method === 'POST' || opts.method === 'PUT') {
      reqOpts.headers['Accept'] = 'application/json';
      reqOpts.headers['Content-Type'] = 'application/json';
    }

    if (opts.body) {
      reqOpts.body = JSON.stringify(opts.body);
    }

    return await fetch(this.GITHUB_API_BASE + opts.url, reqOpts);
  }
};
