
//Navigate to New Cateory
$element = $this->driver->findElement(WebDriverBy::linkText("Edit Categories"));
$this->assertNotNull($element);        
$element->click();

//On Category new page
$this->tryCatchCache(WebDriverExpectedCondition::textToBePresentInElement(WebDriverBy::cssSelector("h1.pagetitle"), 'Campus Categories'));
$url = $this->driver->getCurrentURL();
$this->assertContains('category', $url);

$this->driver->findElement(WebDriverBy::linkText("Add New"));
$this->assertNotNull($element);        
$element->click();
        
$this->tryCatchCache(WebDriverExpectedCondition::textToBePresentInElement(WebDriverBy::cssSelector("h2.sectionheading"), 'New Category'));        
$url = $this->driver->getCurrentURL();
$this->assertContains('category/new', $url);
/*

//Add new Cateory
$this->driver->findElement(WebDriverBy::name("category_title"))->click();
$this->driver->findElement(WebDriverBy::name("category_title"))->clear();
$this->driver->findElement(WebDriverBy::name("category_title"))->sendKeys("BWH Music");
$element = $this->driver->findElement(WebDriverBy::xpath("//div[@id='primary']//button[.='Save']"));
$this->assertNotNull($element);        
$element->click();


//Click the Team tab
$element = $this->driver->findElement(WebDriverBy::linkText("Teams"));
$this->assertNotNull($element);        
$element->click();
    
//Check if on Team List page

$this->tryCatchCache(WebDriverExpectedCondition::textToBePresentInElement(WebDriverBy::className('appBanner__heading'), 'Teams'));

$url = $this->driver->getCurrentURL();
$this->assertContains('group-list', $url);            

//Click the Challenges tab
$element = $this->driver->findElement(WebDriverBy::linkText("Challenges"));
$this->assertNotNull($element);        
$element->click();
    
//Check if on Challenges List page
$this->tryCatchCache(WebDriverExpectedCondition::textToBePresentInElement(WebDriverBy::className('appBanner__heading'), 'Challenges'));
                
$url = $this->driver->getCurrentURL();
$this->assertContains('challenge-list', $url);                        

//Click the hamburger
$element = $this->driver->findElement(WebDriverBy::className("js-navBoxTrigger"));
$this->assertNotNull($element);        
$element->click();

//Click Profile
$this->tryCatchCache(WebDriverExpectedCondition::visibilityOfElementLocated(WebDriverBy::linkText("Profile")));

$element = $this->driver->findElement(WebDriverBy::linkText("Profile"));
$this->assertNotNull($element);        
$element->click();
    
//Check if  Profile page is displayed
$this->tryCatchCache(WebDriverExpectedCondition::visibilityOfElementLocated(WebDriverBy::linkText("Edit Profile")));

$url = $this->driver->getCurrentURL();
$this->assertContains('profile', $url);                                    
        
//Click Edit Profile
$element = $this->driver->findElement(WebDriverBy::linkText("Edit Profile"));
$this->assertNotNull($element);                
$element->click();
    
//Check if on Edit Profile page
$this->tryCatchCache(WebDriverExpectedCondition::textToBePresentInElementValue(WebDriverBy::id('fName'), 'Barton'));

$url = $this->driver->getCurrentURL();
$this->assertContains('edit-profile', $url);                                                

//Click the hamburger
$element = $this->driver->findElement(WebDriverBy::className("js-navBoxTrigger"));
$this->assertNotNull($element);                
$element->click();

//Log out
$element = $this->driver->findElement(WebDriverBy::linkText("Logout"));
$this->assertNotNull($element);                
$element->click();
    
//Check if main page
$this->tryCatchCache(WebDriverExpectedCondition::visibilityOfElementLocated(WebDriverBy::linkText("Log In")));        
$url = $this->driver->getCurrentURL();
$this->assertEquals($url, $this->home);
*/
}
}
?>
