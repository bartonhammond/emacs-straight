'use strict';

/**
 *  Thanks to: http://browniefed.com/blog/2015/06/07/react-native-layout-examples/
 *
 */
import React,
{ Component,
  Image,
  View,
  StyleSheet,
  Text,
  TouchableHighlight}
from 'react-native';


import Dimensions from 'Dimensions';
let windowSize = Dimensions.get('window');

import  _ from 'underscore';
import ItemCheckbox from 'react-native-item-checkbox';
import t from 'tcomb-form-native';

let Form = t.form.Form;

let LoginForm = t.struct({
  email: t.String,
  password: t.String,
  passwordAgain: t.String
});

var styles = StyleSheet.create({
  container: {
    flexDirection: 'column',
    flex: 1,
    backgroundColor: 'transparent'
  },
  bg: {
    position: 'absolute',
    left: 0,
    top: 0,
    width: windowSize.width,
    height: windowSize.height
  },
  header: {
    marginTop: 30,
    justifyContent: 'center',
    alignItems: 'center',

    backgroundColor: 'transparent'
  },
  mark: {
    width: 150,
    height: 150
  },
  signin: {
    marginTop: 10,
    marginLeft: 10,
    marginRight: 10,
    backgroundColor: '#FF3366',
    padding: 20,
    alignItems: 'center'
  },
  signup: {
    justifyContent: 'center',
    alignItems: 'center',
    flex: .15
  },
  inputs: {
    marginTop: 10,
    marginBottom: 10,
    marginLeft: 10,
    marginRight: 10,
    flex: .25
  },
  inputContainer: {
    padding: 10,
    borderWidth: 1,
    borderBottomColor: '#CCC',
    borderColor: 'transparent'
  },
  forgotContainer: {
    alignItems: 'flex-end',
    padding: 15,
    marginBottom: 10
  },
  greyFont: {
    color: '#D8D8D8'
  },
  whiteFont: {
    color: '#FFF'
  }
});

let Login = React.createClass({
  onChange(value) {

    if (!_.isUndefined(_.property('email')(value))) {
      this.props.actions.onAuthFormFieldChange('email',value.email);
    } else if (!_.isUndefined(_.property('password')(value))) {
      this.props.actions.onAuthFormFieldChange('password',value.password);
    } else if (!_.isUndefined(_.property('passwordAgain')(value))) {
      this.props.actions.onAuthFormFieldChange('passwordAgain',value.passwordAgain);
    }
    this.setState({value});
  },

  _onCheckCallback() {
    alert('checked');
  },

  render() {
    if (!_.isNull(this.props.auth.form.error)) {

    }
    let options = {
      auto: 'placeholders',
      fields: {
        email: {
          hasError: this.props.auth.form.fields.emailHasError,
          label: 'Email',
          error: 'Please enter valid email',
          keyboardType: 'email-address',
        },
        password: {
          label: 'Password',
          password: true,
          secureTextEntry: true,
          maxLength: 12,
          hasError: this.props.auth.form.fields.passwordHasError,
          error: 'Must have 6-12 characters with at least 1 number and 1 special character'
        },
        passwordAgain: {
          label: 'Please enter password again',
          password: true,
          secureTextEntry: true,
          maxLength: 12,
          hasError: this.props.auth.form.fields.passwordAgainHasError,
          error: 'Passwords must match'
        }
      }
    };
    

    return (
      <View style={styles.container}>
        <View style={styles.header}>
          <Image style={styles.mark} source={{uri: 'http://i.imgur.com/da4G0Io.png'}} />
        </View>
        <View style={styles.inputs}>
          <Form
              ref="form"
              type={LoginForm}
              options={options}
              onChange={this.onChange}
          />

          <ItemCheckbox //example with callbacks
                          onCheck={this._onCheckCallback}
          />
          <View style={styles.forgotContainer}>
            <Text style={styles.greyFont}>Forgot Password</Text>
          </View>
        </View>
        <View style={styles.signin}>
          <TouchableHighlight onPress={() => this.props.actions.signup(this.props.auth.form.fields.email, this.props.auth.form.fields.password)}>
            <Text style={styles.whiteFont}>Register</Text>
          </TouchableHighlight>
        </View>
        <View style={styles.signup}>
          <Text style={styles.greyFont}>Already have an account?</Text>
          <Text style={styles.whiteFont}> Log in</Text>
        </View>
      </View>
    );
  }
})


export default Login;

/**



<View style={styles.inputContainer}>
            <Image style={styles.inputUsername} source={{uri: 'http://i.imgur.com/iVVVMRX.png'}}/>
        <TextInput 
      style={[styles.input, styles.whiteFont]}
      placeholder="Username"
      placeholderTextColor="#FFF"
      onChangeText={(text) => this.props.actions.onAuthFormFieldChange('email',text)}
        />
        </View>
        <View style={styles.inputContainer}>
        <Image style={styles.inputPassword} source={{uri: 'http://i.imgur.com/ON58SIG.png'}}/>
        <TextInput
      password={true}
      style={[styles.input, styles.whiteFont]}
      placeholder="Password"
      placeholderTextColor="#FFF"
      onChangeText={(text) => this.props.actions.onAuthFormFieldChange('password',text)}
        />
        </View>

        */        
