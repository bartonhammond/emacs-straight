'use strict';

import assert from 'assert';
import React, { View } from 'react-native';
import utils from 'react-addons-test-utils';

var FormButton = require('../../../src/components/FormButton');

describe('FormButton', () => {
  let formButton;
  
  const buttonProps = {
    self: this,
    isDisabled: false,
    onPress: () => {},
    buttonText: 'TestString'
  };

  function renderFormButton(props) {
    const renderer = utils.createRenderer();
    renderer.render(<FormButton {...props}/>);
    const output = renderer.getRenderOutput();

    return {
      props,
      output,
      renderer
    };
  }

  beforeEach(() => {
    formButton = renderFormButton(buttonProps);
  });

  it('should be fine', () => {
    const {output} = formButton;
    assert.deepEqual(output.type,View);
  });

  it('should display text', () => {
    const {output} = formButton;
    const button = output.props.children;
    assert.deepEqual(button.props.isDisabled, buttonProps.isDisabled);
    const buttonText = button.props.children;
    assert(buttonText, buttonProps.buttonText);
  });
});//describe FormButton
