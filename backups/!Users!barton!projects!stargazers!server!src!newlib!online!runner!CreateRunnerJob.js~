'use strict';
let logger = require('../../Bunyan').logger();

import OnlineRunner from './OnlineRunner';

class CreateOnlineRunnerJob{
  constructor() {
    this.queue = require('../../Queue').queue();
    this.batchGetRunner = new OnlineRunner().init();
  }
  
  createJob(id,
            access_token,
            owner,
            repo,
           page) {

    let self = this;

    return new Promise((resolve,reject) => {
      self.queue.create(
        'onlineRunner',
        {title: 'onlineRunner',
         id: id,
         access_token: access_token,
         owner: owner,
         repo: repo,
         page: page
        })
        .delay(1000 * 15)// 1 minute
        .save((err) => {
          if (err) {
            logger.error(
              'CreateOnlineRunnerJob',                
              {id: id,
               error: err,
               access_token: self.access_token});
            
            return reject(err);
          }
          return resolve();
        });
    });
    
  };//createJob
}

let creators = {};
function _getCreator(access_token) {
  if (access_token in creators) {
    return creators[access_token];
  }

  creators[access_token] = new CreateOnlineRunnerJob(access_token);
  return creators[access_token];
}

module.exports = {
  creator: function(access_token) {
    return _getCreator(access_token);
  }
};

