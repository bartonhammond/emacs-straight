'use strict';

/**
Signin base template
*/
Template.signin.onCreated(function() {
  console.log('signin.onCreated');
  WebixDefaults.setState('signIn');
});

Template.signin.onRendered(function() {
  console.log('singin.onRendered');
  if (_.isUndefined(webix.ui.views['signin'])) {
    console.log('singin.onRendered.markup');
    var component =  webix.markup.init();
    webix.event(window, 'resize', function(){
      component.resize();
    });
  }
});

Template.signin.onDestroyed(function() {
  console.log('signin.onDestroyed');
  if (webix.ui.views['signin']) {
    console.log('signin.onDestroyed.destructor');
    webix.ui.views['signin'].destructor();
  } else {
    console.log('signin.onDestroyed.NOdestructor');
  }
});

/**
 * Reuse sigin template see aldeed:template-extension
 */

Template.signin.copyAs(['signup', 'resetPassword', 'pwdreset']);
Template.signup.inheritsHooksFrom("signin");
Template.resetPassword.inheritsHooksFrom("signin");
Template.pwdreset.inheritsHooksFrom("signin");
/**
Signup
*/
Template.signup.onCreated(function() {
  console.log('signup.onCreated');
  WebixDefaults.setState('signUp');
});

Template.signup.onRendered(function() {
  console.log('singup.onRendered');
  if (_.isUndefined(webix.ui.views['signup'])) {
    console.log('singup.onRendered.markup');
    var component =  webix.markup.init();
     webix.event(window, 'resize', function(){
       component.resize();
     });
  }
});

Template.signup.onDestroyed(function() {
  console.log('signup.onDestroyed');
  if (webix.ui.views['signup']) {
    console.log('signup.onDestroyed.destructor');
    webix.ui.views['signup'].destructor();
  } else {
    console.log('signup.onDestroyed.NOdesctrutor');
  }
});

/**
ResetPassword
*/
Template.resetPassword.onCreated(function() {
  console.log('resetPassword.onCreated');
  WebixDefaults.setState('resetPassword');
});

Template.resetPassword.onRendered(function() {
  console.log('resetPassword.onRendered');
  if (_.isUndefined(webix.ui.views['resetpassword'])) {
    console.log('resetPassword.onRendered.markup');
    var component =  webix.markup.init();
     webix.event(window, 'resize', function(){
       component.resize();
     });
  }
});

Template.resetPassword.onDestroyed(function() {
  console.log('resetPassword.onDestroyed');
  if (webix.ui.views['resetpassword']) {
    console.log('resetpassword.onDestroyed.destructor');
    webix.ui.views['resetpassword'].destructor();
  } else {
    console.log('resetpassword.onDestroyed.NOdestructor');
  }
});
/**
Password Reset
**/
Template.pwdreset.onCreated(function() {
  console.log('pwdreset.onCreated');
  WebixDefaults.setState('pwdReset');
});

Template.pwdreset.onRendered(function() {
  console.log('pwdreset.onRendered');
  if (_.isUndefined(webix.ui.views['pwdreset'])) {
    console.log('pwdreset.onRendered.markup');
    var component =  webix.markup.init();
     webix.event(window, 'resize', function(){
       component.resize();
     });
  }
});

Template.pwdreset.onDestroyed(function() {
  console.log('pwdreset.onDestroyed');
  if (webix.ui.views['pwdreset']) {
    console.log('pwdreset.onDestroyed.destructor');
    webix.ui.views['pwdreset'].destructor();
  } else {
    console.log('pwdreset.onDestroyed.destructor');
  }
});

